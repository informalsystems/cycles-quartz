import { routes } from '@/config/routes'
import test from './fixtures'

test.beforeEach(async ({ context, page }) => {
  // Connect to Keplr wallet
  await page.goto(routes.landing)
  await page.getByRole('button', { name: /connect/i }).click()

  // Accept app suggested testnet info
  const addChainPage = await context.waitForEvent('page')

  await addChainPage.getByRole('button', { name: /approve/i }).click()
  await addChainPage.waitForEvent('close')
})

test.describe('Seed Phrase', () => {
  test('can use autogenerated seed phrase', async ({ page }) => {
    await page.getByRole('button', { name: /continue with/i }).click()
    await test.expect(page.getByText(/balance:/i)).toBeVisible()
    await test
      .expect(
        await page.evaluate(() =>
          window.localStorage.getItem('ephemeral-mnemonic'),
        ),
      )
      .toBeDefined()
  })

  test('can enter and use a custom seed phrase', async ({ page }) => {
    await page.getByRole('button', { name: /enter my own/i }).click()
    await page.locator('input').fill(process.env.TEST_WALLET_MNEMONIC!)
    await page.getByRole('button', { name: 'Continue', exact: true }).click()
    await test.expect(page.getByText(/balance:/i)).toBeVisible()
    await test
      .expect(
        await page.evaluate(() =>
          window.localStorage.getItem('ephemeral-mnemonic'),
        ),
      )
      .toEqual(process.env.TEST_WALLET_MNEMONIC)
  })
})
